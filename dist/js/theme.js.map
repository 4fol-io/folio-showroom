{"version":3,"file":"/js/theme.js","mappings":"2FAIA,WAEI,aAEA,IAAMA,EAAa,mBAEbC,EAAU,WAEZC,EAAMC,MAAwB,UAAhBD,EAAMC,MACd,OACA,QAENC,GACJ,EAWMA,EAAgB,WAClBC,aAAaC,QAAQN,EAAYE,EAAMC,OACvCI,GACJ,EAEMA,EAAoB,WAAM,IAAAC,EAC5BC,SAASC,gBACJC,aAAa,gBAAiBT,EAAMC,OAEN,QADnCK,EAAAC,SACKG,cAAc,wBAAgB,IAAAJ,GADnCA,EAEMG,aAAa,aAAcT,EAAMC,MAC3C,EAEMD,EAAQ,CACVC,MAtBIE,aAAaQ,QAAQb,GACdK,aAAaQ,QAAQb,GAErBc,OAAOC,WAAW,gCAAgCC,QACnD,OACA,SAqBdT,IAEAO,OAAOG,OAAS,WAEZV,IAGA,IAAMW,EAAYT,SAASG,cAAc,iBACrCM,GACAA,EAAUC,iBAAiB,QAASlB,EAE5C,EAGAa,OACKC,WAAW,gCACXI,iBAAiB,UAAU,SAAAC,GAAyB,IAAbC,EAAMD,EAAfJ,QAC3Bd,EAAMC,MAAQkB,EAAS,OAAS,QAChCjB,GACJ,GAEP,CA/DD,E","sources":["webpack://folio-showroom/./src/js/theme.js"],"sourcesContent":["/**\n * Showroom Theme color mode switcher\n */\n\n(function () {\n\n    'use strict';\n\n    const storageKey = 'theme-preference'\n\n    const onClick = () => {\n        // flip current value\n        theme.value = theme.value === 'light'\n            ? 'dark'\n            : 'light'\n\n        setPreference()\n    }\n\n    const getColorPreference = () => {\n        if (localStorage.getItem(storageKey))\n            return localStorage.getItem(storageKey)\n        else\n            return window.matchMedia('(prefers-color-scheme: dark)').matches\n                ? 'dark'\n                : 'light'\n    }\n\n    const setPreference = () => {\n        localStorage.setItem(storageKey, theme.value)\n        reflectPreference()\n    }\n\n    const reflectPreference = () => {\n        document.documentElement\n            .setAttribute('data-bs-theme', theme.value)\n        document\n            .querySelector('#theme-toggle')\n            ?.setAttribute('aria-label', theme.value)\n    }\n\n    const theme = {\n        value: getColorPreference(),\n    }\n\n    // set early so no page flashes / CSS is made aware\n    reflectPreference()\n\n    window.onload = () => {\n        // set on load so screen readers can see latest value on the button\n        reflectPreference()\n\n        // now this script can find and listen for clicks on the control\n        const _selector = document.querySelector('#theme-toggle')\n        if (_selector) {\n            _selector.addEventListener('click', onClick)\n        }\n    }\n\n    // sync with system changes\n    window\n        .matchMedia('(prefers-color-scheme: dark)')\n        .addEventListener('change', ({ matches: isDark }) => {\n            theme.value = isDark ? 'dark' : 'light'\n            setPreference()\n        })\n\n})()"],"names":["storageKey","onClick","theme","value","setPreference","localStorage","setItem","reflectPreference","_document$querySelect","document","documentElement","setAttribute","querySelector","getItem","window","matchMedia","matches","onload","_selector","addEventListener","_ref","isDark"],"sourceRoot":""}