{"version":3,"file":"/js/editor.js","mappings":"gyBAQA,IAAAA,EAAmCC,GAAGC,KAA9BC,EAASH,EAATG,UAAWC,EAAWJ,EAAXI,YACXC,EAAgBJ,GAAGK,WAAnBD,YAyBR,QAvByB,SAACE,GAEtB,IAAQC,EAAcL,GAAU,SAACM,GAC7B,MAAO,CACHD,UAAWC,EAAO,eAAeC,uBAAuB,QAAQH,EAAMI,SAE9E,GAAG,CAACJ,EAAMI,UAJFH,UAMAI,EAAaR,EAAY,eAAzBQ,SAER,OACIC,EAAAA,EAAAA,KAACR,EAAW,CACRS,KAAK,OACLC,MAAOR,EAAMQ,MACbC,KAAMT,EAAMS,KACZC,MAAOT,EACPU,UAAW,mCACXC,SAAU,SAACF,GAAK,OAAKL,EAAS,CAAEQ,KAAIC,EAAA,GAAKd,EAAMI,QAAUM,IAAU,GAI/E,E,qqBCxBA,IAAAjB,EAAmCC,GAAGC,KAA9BC,EAASH,EAATG,UAAWC,EAAWJ,EAAXI,YACXkB,EAAkBrB,GAAGK,WAArBgB,cA6CR,QA3C2B,SAACf,GAExB,IAAQC,EAAcL,GAAU,SAACM,GAC7B,MAAO,CACHD,UAAWC,EAAO,eAAeC,uBAAuB,QAAQH,EAAMI,SAE9E,GAAG,CAACJ,EAAMI,UAJFH,UAMAe,EAA6BhB,EAA7BgB,YAAaR,EAAgBR,EAAhBQ,MAAOC,EAAST,EAATS,KAEpBJ,EAAaR,EAAY,eAAzBQ,SAEJW,GAAef,GACfgB,SAASC,KAAKC,UAAUC,IAAIJ,GAkBhC,OACIV,EAAAA,EAAAA,KAACS,EAAa,CACVP,MAAOA,EACPC,KAAMA,EACNY,QAASpB,EACTU,UAAW,qCACXC,SAAU,SAACF,GAAK,OArBT,SAACA,GAGRM,IACIN,EACAO,SAASC,KAAKC,UAAUC,IAAIJ,GAE5BC,SAASC,KAAKC,UAAUG,OAAON,IAKvCX,EAAS,CAAEQ,KAAIC,EAAA,GAAKd,EAAMI,QAAUM,IACxC,CAQ6Ba,CAAOb,EAAM,GAI9C,E,qqBC5CA,IAAAc,EAAyCC,OAAO/B,GAAGK,WAA3C2B,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAASC,EAAWJ,EAAXI,YACzBC,EAA0CJ,OAAO/B,GAAGoC,YAA5CC,EAAWF,EAAXE,YAAaC,EAAgBH,EAAhBG,iBACrBC,EAAmCR,OAAO/B,GAAGC,KAArCC,EAASqC,EAATrC,UAAWC,EAAWoC,EAAXpC,YACJH,GAAGwC,KAAVC,GAkDR,QAhD0B,SAACnC,GAE1B,IAAAoC,EAA2BxC,GAAU,SAAAM,GAEpC,IAAMmC,EAAKnC,EAAO,eAAeC,uBAAuB,QAAQH,EAAMI,SAEtE,MAAO,CACNkC,QAASD,EACTE,MAAOrC,EAAO,QAAQsC,SAASH,GAEjC,IARQC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAUTlC,EAAaR,EAAY,cAAe,CAACyC,IAAzCjC,SAEFoC,EAAWzC,EAAMyC,UAAY,eAC7BC,EAAc1C,EAAM0C,aAAe,eAEzC,OACCC,EAAAA,EAAAA,MAACf,EAAW,CAACS,GAAIrC,EAAMI,QAASI,MAAOR,EAAMQ,MAAOG,UAAS,qCAAAiC,OAAuC5C,EAAMW,WAAYkC,SAAA,EACrHvC,EAAAA,EAAAA,KAAC0B,EAAgB,CAAAa,UAChBvC,EAAAA,EAAAA,KAACyB,EAAW,CACXe,SAAU,SAACC,GAAK,OAAK1C,EAAS,CAAEQ,KAAIC,EAAA,GAAKd,EAAMI,QAAU2C,EAAMV,KAAO,EACtEW,aAAc,CAAC,SACftC,MAAO4B,EACPW,OAAQ,SAAAC,GAAA,IAAGC,EAAID,EAAJC,KAAI,OACdR,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACGP,IAAWhC,EAAAA,EAAAA,KAACoB,EAAM,CAAC0B,QAAQ,YAAYC,QAASF,EAAKN,SAAEJ,MACtDH,IAAYC,IACdjC,EAAAA,EAAAA,KAACqB,EAAO,MAENY,GAASA,IACXjC,EAAAA,EAAAA,KAACoB,EAAM,CAAC0B,QAAQ,OAAOC,QAASF,EAAKN,UACpCvC,EAAAA,EAAAA,KAAA,OAAKgD,IAAKf,EAAMgB,iBAGb,QAINjB,IACFhC,EAAAA,EAAAA,KAACoB,EAAM,CAAC2B,QAAS,kBAAMhD,EAAS,CAAEQ,KAAIC,EAAA,GAAKd,EAAMI,QAAU,OAAS,EAAEoD,QAAM,EAACC,eAAa,EAAAZ,SACxFH,MAKN,E,qqBCnDA,IAAAjD,EAAmCC,GAAGC,KAA9BC,EAASH,EAATG,UAAWC,EAAWJ,EAAXI,YACX6D,EAAkBhE,GAAGK,WAArB2D,cAyBR,QAvB2B,SAAC1D,GAExB,IAAQC,EAAcL,GAAU,SAACM,GAC7B,MAAO,CACHD,UAAWC,EAAO,eAAeC,uBAAuB,QAAQH,EAAMI,SAE9E,GAAG,CAACJ,EAAMI,UAJFH,UAMAI,EAAaR,EAAY,eAAzBQ,SAER,OACIC,EAAAA,EAAAA,KAACoD,EAAa,CACVlD,MAAOR,EAAMQ,MACbC,KAAMT,EAAMS,KACZC,MAAOT,EACPU,UAAW,qCACXgD,QAAS3D,EAAM2D,QACf/C,SAAU,SAACF,GAAK,OAAKL,EAAS,CAAEQ,KAAIC,EAAA,GAAKd,EAAMI,QAAUM,IAAU,GAI/E,GClBA,SAAWhB,GAEP,IAAQkE,EAAmBlE,EAAGmE,QAAtBD,eACAE,EAA+BpE,EAAGW,SAAlCyD,2BACAC,EAAerE,EAAGC,KAAlBoE,WACA5B,EAAOzC,EAAGwC,KAAVC,GA2FRyB,EAAe,uBAAwB,CAAEX,OANTc,GAAW,SAAA7D,GACvC,MAAO,CACH8D,SAAU9D,EAAO,eAAeC,uBAAuB,YAE/D,GAJgC4D,EAnFV,SAAHb,GAAcA,EAARc,SASrB,OACIrB,EAAAA,EAAAA,MAAAsB,EAAAA,SAAA,CAAApB,SAAA,EACIF,EAAAA,EAAAA,MAACmB,EAA0B,CACvBI,KAAK,+BACLC,MAAOhC,EAAG,oBAAqB,kBAAkBU,SAAA,EAEjDvC,EAAAA,EAAAA,KAAC8D,EAAkB,CACf5D,MAAO2B,EAAG,YAAa,kBACvB/B,QAAQ,2BACRK,KAAM0B,EAAG,mDAAoD,qBAGjE7B,EAAAA,EAAAA,KAAC+D,EAAkB,CACf7D,MAAO2B,EAAG,eAAgB,kBAC1B/B,QAAQ,+BACRuD,QAAS,CACL,CAAEjD,MAAO,GAAIF,MAAO2B,EAAG,UAAW,mBAClC,CAAEzB,MAAO,QAASF,MAAO2B,EAAG,QAAS,mBACrC,CAAEzB,MAAO,OAAQF,MAAO2B,EAAG,OAAQ,mBACnC,CAAEzB,MAAO,cAAeF,MAAO2B,EAAG,sBAAuB,mBACzD,CAAEzB,MAAO,oBAAqBF,MAAO2B,EAAG,oBAAqB,mBAC7D,CAAEzB,MAAO,mBAAoBF,MAAO2B,EAAG,mBAAoB,uBAInE7B,EAAAA,EAAAA,KAAC8D,EAAkB,CACf5D,MAAO2B,EAAG,kBAAmB,kBAC7B/B,QAAQ,iCACRK,KAAM0B,EAAG,4DAA6D,qBAG1E7B,EAAAA,EAAAA,KAAC8D,EAAkB,CACf5D,MAAO2B,EAAG,cAAe,kBACzB/B,QAAQ,6BACRY,YAAY,yBAGhBV,EAAAA,EAAAA,KAAC8D,EAAkB,CACf5D,MAAO2B,EAAG,oBAAqB,kBAC/B/B,QAAQ,+BAGZE,EAAAA,EAAAA,KAAC8D,EAAkB,CACf5D,MAAO2B,EAAG,uBAAwB,kBAClC/B,QAAQ,0CAIhBuC,EAAAA,EAAAA,MAACmB,EAA0B,CACvBI,KAAK,8BACLC,MAAOhC,EAAG,kBAAmB,kBAAkBU,SAAA,EAE/CvC,EAAAA,EAAAA,KAACgE,EAAiB,CACdlE,QAAQ,gCACRI,MAAO2B,EAAG,eAAgB,kBAC1BM,SAAUN,EAAG,eAAgB,kBAC7BO,YAAaP,EAAG,eAAgB,kBAChCxB,UAAW,yBAEfL,EAAAA,EAAAA,KAACiE,EAAgB,CACb/D,MAAO2B,EAAG,cAAe,kBACzB/B,QAAQ,qCAEZE,EAAAA,EAAAA,KAACiE,EAAgB,CACb/D,MAAO2B,EAAG,aAAc,kBACxB/B,QAAQ,oCAM5B,KAWH,CAlGD,CAkGGqB,OAAO/B,G","sources":["webpack://folio-showroom/./src/js/components/FolioTextControl.js","webpack://folio-showroom/./src/js/components/FolioToggleControl.js","webpack://folio-showroom/./src/js/components/FolioImageControl.js","webpack://folio-showroom/./src/js/components/FolioSelectControl.js","webpack://folio-showroom/./src/js/editor.js"],"sourcesContent":["/**\n * Folio Text Control React Component\n *\n * Handles Text control for post/page meta\n *\n * @package Folio\n */\n\nconst { useSelect, useDispatch } = wp.data\nconst { TextControl } = wp.components\n\nconst FolioTextControl = (props) => {\n\n    const { metaValue } = useSelect((select) => {\n        return {\n            metaValue: select('core/editor').getEditedPostAttribute('meta')[props.metaKey],\n        }\n    }, [props.metaKey]);\n\n    const { editPost } = useDispatch('core/editor');\n\n    return (\n        <TextControl\n            type=\"text\"\n            label={props.label}\n            help={props.help}\n            value={metaValue}\n            className={'folio-control folio-text-control'}\n            onChange={(value) => editPost({ meta: { [props.metaKey]: value } })}\n        />\n    )\n\n}\n\nexport default FolioTextControl;","/**\n * Folio Select Control React Component\n *\n * Handles Toggle Control for post/page meta\n *\n * @package Folio\n */\n\nconst { useSelect, useDispatch } = wp.data\nconst { ToggleControl } = wp.components\n\nconst FolioToggleControl = (props) => {\n\n    const { metaValue } = useSelect((select) => {\n        return {\n            metaValue: select('core/editor').getEditedPostAttribute('meta')[props.metaKey],\n        }\n    }, [props.metaKey]);\n\n    const { bodyClassOn, label, help } = props;\n\n    const { editPost } = useDispatch('core/editor');\n\n    if (bodyClassOn && metaValue) {\n        document.body.classList.add(bodyClassOn);\n    }\n\n    const toggle = (value) => {\n\n        // Toggle body class if passed\n        if (bodyClassOn) {\n            if (value) {\n                document.body.classList.add(bodyClassOn)\n            } else {\n                document.body.classList.remove(bodyClassOn)\n            }\n        }\n\n        // Dispatch update post meta\n        editPost({ meta: { [props.metaKey]: value } });\n    }\n\n    return (\n        <ToggleControl\n            label={label}\n            help={help}\n            checked={metaValue}\n            className={'folio-control folio-toggle-control'}\n            onChange={(value) => toggle(value)}\n        />\n    )\n\n}\n\nexport default FolioToggleControl;","/**\n * Folio Image Control React Component\n *\n * Handles Image Media Upload Control to post/page meta\n *\n * @package Folio\n */\n\nconst { Button, Spinner, BaseControl } = window.wp.components\nconst { MediaUpload, MediaUploadCheck } = window.wp.blockEditor\nconst { useSelect, useDispatch } = window.wp.data\nconst { __ } = wp.i18n;\n\nconst FolioImageControl = (props) => {\n\n\tconst { imageId, image } = useSelect(select => {\n\n\t\tconst id = select('core/editor').getEditedPostAttribute('meta')[props.metaKey];\n\n\t\treturn {\n\t\t\timageId: id,\n\t\t\timage: select('core').getMedia(id),\n\t\t}\n\t})\n\n\tconst { editPost } = useDispatch('core/editor', [imageId])\n\n\tconst addLabel = props.addLabel || 'Upload image';\n\tconst removeLabel = props.removeLabel || 'Remove image';\n\n\treturn (\n\t\t<BaseControl id={props.metaKey} label={props.label} className={`folio-control folio-image-control ${props.className}`}>\n\t\t\t<MediaUploadCheck>\n\t\t\t\t<MediaUpload\n\t\t\t\t\tonSelect={(media) => editPost({ meta: { [props.metaKey]: media.id } })}\n\t\t\t\t\tallowedTypes={['image']}\n\t\t\t\t\tvalue={imageId}\n\t\t\t\t\trender={({ open }) => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{!imageId && <Button variant=\"secondary\" onClick={open}>{addLabel}</Button>}\n\t\t\t\t\t\t\t{!!imageId && !image &&\n\t\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{!!image && image &&\n\t\t\t\t\t\t\t\t<Button variant=\"link\" onClick={open}>\n\t\t\t\t\t\t\t\t\t<img src={image.source_url} />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</MediaUploadCheck>\n\t\t\t{!!imageId &&\n\t\t\t\t<Button onClick={() => editPost({ meta: { [props.metaKey]: null } })} isLink isDestructive>\n\t\t\t\t\t{removeLabel}\n\t\t\t\t</Button>\n\t\t\t}\n\t\t</BaseControl>\n\t)\n}\n\nexport default FolioImageControl","/**\n * Folio Select Control React Component\n *\n * Handles Select Control for post/page meta\n *\n * @package Folio\n */\n\nconst { useSelect, useDispatch } = wp.data\nconst { SelectControl } = wp.components\n\nconst FolioSelectControl = (props) => {\n\n    const { metaValue } = useSelect((select) => {\n        return {\n            metaValue: select('core/editor').getEditedPostAttribute('meta')[props.metaKey],\n        }\n    }, [props.metaKey]);\n\n    const { editPost } = useDispatch('core/editor');\n\n    return (\n        <SelectControl\n            label={props.label}\n            help={props.help}\n            value={metaValue}\n            className={'folio-control folio-select-control'}\n            options={props.options}\n            onChange={(value) => editPost({ meta: { [props.metaKey]: value } })}\n        />\n    )\n\n}\n\nexport default FolioSelectControl;\n\n\n\n","/**\n * FolioShowroom Editor Post/Page Main React Script\n *\n * Adds Showroom custom panels to WP Block Editor Sidebar\n *\n * @package Folio\n */\n\n\nimport FolioTextControl from './components/FolioTextControl.js';\nimport FolioToggleControl from './components/FolioToggleControl.js';\nimport FolioImageControl from './components/FolioImageControl.js';\nimport FolioSelectControl from './components/FolioSelectControl.js';\n\n(function (wp) {\n\n    const { registerPlugin } = wp.plugins;\n    const { PluginDocumentSettingPanel } = wp.editPost;\n    const { withSelect } = wp.data;\n    const { __ } = wp.i18n;\n\n    const ShowRoomPanel = ({ template }) => {\n\n        /*\n        if( 'template.php' !== template ) {\n            return null\n        }\n        return template;\n        */\n\n        return (\n            <>\n                <PluginDocumentSettingPanel\n                    name=\"folio-showroom-settins-panel\"\n                    title={__('Showroom Settings', 'folio-showroom')}\n                >\n                    <FolioToggleControl\n                        label={__('Featured?', 'folio-showroom')}\n                        metaKey=\"_folio_showroom_featured\"\n                        help={__('Featured posts are displayed in the home slider.', 'folio-showroom')}\n                    />\n\n                    <FolioSelectControl\n                        label={__('Header style', 'folio-showroom')}\n                        metaKey=\"_folio_showroom_header_theme\"\n                        options={[\n                            { value: '', label: __('Default', 'folio-showroom') },\n                            { value: 'light', label: __('Light', 'folio-showroom') },\n                            { value: 'dark', label: __('Dark', 'folio-showroom') },\n                            { value: 'transparent', label: __('Transparent Default', 'folio-showroom') },\n                            { value: 'transparent-light', label: __('Transparent Light', 'folio-showroom') },\n                            { value: 'transparent-dark', label: __('Transparent Dark', 'folio-showroom') },\n                        ]}>\n                    </FolioSelectControl>\n\n                    <FolioToggleControl\n                        label={__('Header overlay?', 'folio-showroom')}\n                        metaKey=\"_folio_showroom_header_overlay\"\n                        help={__('Removes header margin for fullwidth sliders, covers, etc.', 'folio-showroom')}\n                    />\n\n                    <FolioToggleControl\n                        label={__('Hide title?', 'folio-showroom')}\n                        metaKey=\"_folio_showroom_hide_title\"\n                        bodyClassOn=\"showroom-hide-title\"\n                    />\n\n                    <FolioToggleControl\n                        label={__('Hide header info?', 'folio-showroom')}\n                        metaKey=\"_folio_showroom_hide_meta\"\n                    />\n\n                    <FolioToggleControl\n                        label={__('Hide featured image?', 'folio-showroom')}\n                        metaKey=\"_folio_showroom_hide_featured_img\"\n                    />\n\n                </PluginDocumentSettingPanel>\n                <PluginDocumentSettingPanel\n                    name=\"folio-showroom-author-panel\"\n                    title={__('Showroom author', 'folio-showroom')}\n                >\n                    <FolioImageControl\n                        metaKey=\"_folio_showroom_author_avatar\"\n                        label={__('Author image', 'folio-showroom')}\n                        addLabel={__('Upload image', 'folio-showroom')}\n                        removeLabel={__('Remove image', 'folio-showroom')}\n                        className={\"folio-author-avatar\"}\n                    />\n                    <FolioTextControl\n                        label={__('Author name', 'folio-showroom')}\n                        metaKey=\"_folio_showroom_author_fullname\"\n                    />\n                    <FolioTextControl\n                        label={__('Author url', 'folio-showroom')}\n                        metaKey=\"_folio_showroom_author_url\"\n                    />\n                </PluginDocumentSettingPanel>\n            </>\n        )\n\n    }\n\n    // we are going to use withSelect in order for template to be available inside\n    const ShowRoomPanelWithSelect = withSelect(select => {\n        return {\n            template: select('core/editor').getEditedPostAttribute('template')\n        };\n    })(ShowRoomPanel);\n\n    registerPlugin('folio-showroom-panel', { render: ShowRoomPanelWithSelect });\n\n})(window.wp);\n"],"names":["_wp$data","wp","data","useSelect","useDispatch","TextControl","components","props","metaValue","select","getEditedPostAttribute","metaKey","editPost","_jsx","type","label","help","value","className","onChange","meta","_defineProperty","ToggleControl","bodyClassOn","document","body","classList","add","checked","remove","toggle","_window$wp$components","window","Button","Spinner","BaseControl","_window$wp$blockEdito","blockEditor","MediaUpload","MediaUploadCheck","_window$wp$data","i18n","__","_useSelect","id","imageId","image","getMedia","addLabel","removeLabel","_jsxs","concat","children","onSelect","media","allowedTypes","render","_ref","open","variant","onClick","src","source_url","isLink","isDestructive","SelectControl","options","registerPlugin","plugins","PluginDocumentSettingPanel","withSelect","template","_Fragment","name","title","FolioToggleControl","FolioSelectControl","FolioImageControl","FolioTextControl"],"sourceRoot":""}